{
    "The little Printf -- 我们因何而编码？.md": {
        "tags": ["杂谈", "观点"],
        "introText": "一篇演讲的翻译。讲述了一个故事：小 Printf 被屎山代码逼上了寻找更加理智的软件开发之答案的旅途。途中遇到办公室政治家、理论派键盘侠、最新最酷的技术弄潮儿、Oncall 战神、云端上（字面意思）的架构师，但是发现这帮人并不能解答他的疑惑……"
    },
    "抽象回调函数之路.md": {
        "introText": "一篇古怪的科普。讲述了从 CPS 变形推到出来如今 JS 中的 Promise，再粗浅地提了一下 Functor 和 Monad。它主要集中在“语义”的表达上而没怎么管实现（例如 MicroTask 和 Task，以及 JS 调度器），事实上我至今不知道 JS 中的 async / await 是怎么实现的——但是经验上看一些语言不会通过翻译成 CPS 形式而是翻译成状态机来实现（例如 Rust）。"
    },
    "资源、所有权、生命.md": {
        "tags": ["未完成"],
        "introText": "一篇未完成的文章。试图从自己编程的经验来推到出来“资源”这一抽象。但是最后因为学艺不精鸽了🐦。"
    }
}